version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.4.1
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.20.1/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker-compose build
            if [[ ! -z "${CIRCLE_TAG}" ]]; then
              TAG=${CIRCLE_TAG} docker-compose build
            fi
      - run:
          name: Test examples
          command: |
            mkdir -p docker-cert
            cp ${DOCKER_CERT_PATH}/* docker-cert/
            for dir in $(ls -d examples/*); do
              echo "Testing $dir"

              # creating dummy container which will hold a volume with config
              docker create -v /cfg --name configs alpine:3.4 /bin/true
              # copying config file into this volume
              docker cp docker-cert/ca.pem configs:/cfg
              docker cp docker-cert/cert.pem configs:/cfg
              docker cp docker-cert/key.pem configs:/cfg
              # starting application container using this volume
              docker run --volumes-from configs --env DOCKER_IMAGES="mariadb:10.1.31,prom/mysqld-exporter:v0.10.0" --env HELM_CHART_REPOSITORY=stable --env HELM_CHART_NAME=mariadb --env HELM_CHART_VERSION="2.1.17" --env APP_VERSION="0.0.1-SNAPSHOT" --env APP_NAME="mariadb" --env DOCKER_HOST=${DOCKER_HOST} --env DOCKER_TLS_VERIFY=${DOCKER_TLS_VERIFY} --env DOCKER_CERT_PATH=/cfg bjornmagnusson/kube-app-packager

              DOCKER_HOST=${DOCKER_HOST} CERT_PATH=/cfg DOCKER_TLS_VERIFY=${DOCKER_TLS_VERIFY} docker-compose -f $dir/docker-compose.package.yml config
              DOCKER_HOST=${DOCKER_HOST} CERT_PATH=/cfg DOCKER_TLS_VERIFY=${DOCKER_TLS_VERIFY} docker-compose -f $dir/docker-compose.package.yml up --abort-on-container-exit
            done
      - deploy:
          name: Push Docker image to Docker Hub
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker-compose push
            fi
            if [[ ! -z "${CIRCLE_TAG}" ]]; then
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              TAG=${CIRCLE_TAG} docker-compose push
            fi

workflows:
  version: 2
  build:
    jobs:
      - build:
          context: DOCKER_HUB
          filters:
            tags:
              only: /.*/
